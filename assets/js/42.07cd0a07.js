(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{474:function(n,e,t){"use strict";t.r(e);var s=t(12),a=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_45-跳跃游戏-ii"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_45-跳跃游戏-ii"}},[n._v("#")]),n._v(" 45. 跳跃游戏 II")]),n._v(" "),t("p",[n._v("给你一个非负整数数组 nums ，你最初位于数组的第一个位置。\n数组中的每个元素代表你在该位置可以跳跃的最大长度。\n你的目标是使用最少的跳跃次数到达数组的最后一个位置。\n假设你总是可以到达数组的最后一个位置。")]),n._v(" "),t("p",[n._v("示例 1:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("输入: nums = [2,3,1,1,4]\n输出: 2\n解释: 跳到最后一个位置的最小跳跃数是 2。\n     从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。\n")])])]),t("p",[n._v("示例 2:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("输入: nums = [2,3,0,1,4]\n输出: 2\n")])])]),t("p",[n._v("解答")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("每次保存下一个能到达的最远位置，到达该位置时，再设置最远能到达的位置。\n\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar jump = function(nums) {\n    let curIndex = 0\n    let nextIndex = 0\n    let step = 0\n    for (let i = 0; i < nums.length - 1; i++) {\n        // nextIndex 表示每次取当前能到达的最远的index\n        nextIndex = Math.max(nums[i] + i, nextIndex)\n        // 当curIndex === 倒数第二个index 步数再加一\n        if (i === curIndex) {\n            curIndex = nextIndex\n            step++\n        }\n    }\n    return step\n};\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);