(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{463:function(n,s,t){"use strict";t.r(s);var e=t(12),a=Object(e.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。\n解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。")]),n._v(" "),t("p",[n._v("示例 1：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("输入：nums = [1,2,3]\n输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n")])])]),t("p",[n._v("示例 2：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("输入：nums = [0]\n输出：[[],[0]]\n")])])]),t("p",[n._v("提示：")]),n._v(" "),t("ul",[t("li",[n._v("1 <= nums.length <= 10")]),n._v(" "),t("li",[n._v("-10 <= nums[i] <= 10")]),n._v(" "),t("li",[n._v("nums 中的所有元素 互不相同")])]),n._v(" "),t("p",[n._v("解答")]),n._v(" "),t("p",[n._v("左移 shift：x << n 向左移动n位，右边填入0。"),t("br"),n._v("\n从数学角度出发，子集个数为2^n个。因此可以从0 -> 2^n次进行遍历。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar subsets = function(nums) {\n    let n = nums.length\n    let ans = []\n    for (let i = 0; i < (1 << n); i++) {\n        let t = []\n        for (let j = 0; j < n; j++) {\n            if (i & (1 << j)) {\n                t.push(nums[j])\n            }\n        }\n        ans.push(t)\n    }\n    return ans\n};")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);