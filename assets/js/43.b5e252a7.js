(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{476:function(n,t,e){"use strict";e.r(t);var s=e(12),a=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_55-跳跃游戏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_55-跳跃游戏"}},[n._v("#")]),n._v(" 55. 跳跃游戏")]),n._v(" "),e("p",[n._v("标签（空格分隔）： 贪心")]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("给定一个非负整数数组 nums ，你最初位于数组的 第一个下标 。\n数组中的每个元素代表你在该位置可以跳跃的最大长度。\n判断你是否能够到达最后一个下标。")]),n._v(" "),e("p",[n._v("示例 1：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("输入：nums = [2,3,1,1,4]\n输出：true\n解释：可以先跳 1 步，从下标 0 到达下标 1, 然后再从下标 1 跳 3 步到达最后一个下标。\n")])])]),e("p",[n._v("示例 2：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("输入：nums = [3,2,1,0,4]\n输出：false\n解释：无论怎样，总会到达下标为 3 的位置。但该下标的最大跳跃长度是 0 ， 所以永远不可能到达最后一个下标。\n")])])]),e("p",[n._v("提示：")]),n._v(" "),e("ul",[e("li",[n._v("1 <= nums.length <= 3 * 104")]),n._v(" "),e("li",[n._v("0 <= nums[i] <= 105")])]),n._v(" "),e("p",[n._v("解答")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("每次保存当前位置能够到达的最远距离，在到达最远距离前，比较每一位能到的最远距离，取最大值。若大于最大索引则true。\n\n/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar canJump = function(nums) {\n    let count = 0\n    for (let i = 0; i <= count; i++) {\n        count = Math.max(count, nums[i] + i)\n        if (count >= nums.length - 1) return true\n    }\n    return false\n};")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);